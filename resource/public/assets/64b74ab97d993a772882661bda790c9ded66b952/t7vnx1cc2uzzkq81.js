import{d as L,o as W,u as c,r as f,j as d,i as B,M as D,a6 as F,a5 as G}from"./ci5tkrccytan34lo.js";import{nf as A,cL as I,ai as S,bf as N,g9 as K,fW as Q,i8 as C,ij as T}from"./fztttvm3qzdvif1h.js";import{b3 as j,aC as H,aH as h,aE as l,aT as P,b as i,e2 as q,aj as R,cT as b,bf as w,c as v}from"./ccccre6vnqbb7l94.js";var y,x;function O(){if(x)return y;x=1;var s=j(),e=A();function t(a,r){return a&&a.length?e(a,s(r,2)):0}return y=t,y}var U=O();const p=L(U);function re(s){const e=E(s?.output_items);return{filesModified:p(e,t=>t.files_modified??0),linesAdded:p(e,t=>t.lines_added??0),linesRemoved:p(e,t=>t.lines_removed??0)}}function E(s){return s?s.map(e=>{switch(e.type){case"output_diff":return e;case"pr":return e.output_diff;default:return null}}).filter(e=>e!=null):[]}const _=H()((s,e)=>({environmentId:h.getItem(l.LastEnvironment),branch:null,manuallyAddedBranches:[],promptDraft:h.getItem(l.PromptDraft)??"",tasksFilter:"current",taskTurnMap:{},showReactQueryDevtools:!1,lastClickedChangelogDate:h.getItem(l.WhamChangelogClickedDate)??null,pendingTaskIds:{},lastViewedTaskId:null,_fetchedRateLimit:null,_forcedRateLimit:function(){return null}(),setShowReactQueryDevtools:t=>{h.setItem(l.ReactQueryDevtoolsVisible,t),s({showReactQueryDevtools:t})},setLastClickedChangelogDate:t=>{h.setItem(l.WhamChangelogClickedDate,t),s({lastClickedChangelogDate:t})},setPromptDraft:t=>{h.setItem(l.PromptDraft,t),s({promptDraft:t})},setEnvironmentId:t=>{t==null?h.removeItem(l.LastEnvironment):h.setItem(l.LastEnvironment,t),s({environmentId:t})},setBranch:t=>s({branch:t}),addManuallyAddedBranch:t=>s(a=>a.manuallyAddedBranches.includes(t)?{}:{manuallyAddedBranches:[t,...a.manuallyAddedBranches]}),setTasksFilter:t=>s({tasksFilter:t}),setLastViewedTaskId:t=>s({lastViewedTaskId:t}),addTurnToTaskMap:(t,a)=>{s(r=>{const n=r.taskTurnMap[t],o=n?{...n}:{};return o[a.id]=a,{taskTurnMap:{...r.taskTurnMap,[t]:o}}})},getTurnsForTask:t=>{const a=e().taskTurnMap[t]??[];return Object.values(a).sort((r,n)=>r.created_at-n.created_at)},addPendingTaskId:t=>{const a={...e().pendingTaskIds};a[t]=t,s({pendingTaskIds:a})},removePendingTaskId:t=>{const a={...e().pendingTaskIds};delete a[t],s({pendingTaskIds:a})},removePendingTaskByTaskId:t=>{const a=e().pendingTaskIds,[r]=Object.entries(a).find(([n,o])=>o===t)??[];if(r){const n={...a};delete n[r],s({pendingTaskIds:n})}},assignPendingTaskToFinalTask:(t,a)=>s(r=>({pendingTaskIds:{...r.pendingTaskIds,[t]:a}})),getRateLimit:()=>e()._fetchedRateLimit,setRateLimit:t=>s({_fetchedRateLimit:t}),forceRateLimit:t=>{}}));function ne(s,e,t,a){switch(s.type){case"repo_not_accessible":a.danger(t.formatMessage({id:"wham.whamComposer.repoNotAccessible",defaultMessage:"Canâ€™t access GitHub repository. Verify your repository access on GitHub, or reconnect your GitHub account in Codex Settings."}),{id:e,duration:10,hasCloseButton:!0});return;case"missing_github_connector_link":a.danger(t.formatMessage({id:"wham.whamComposer.missingGithubConnectorLink",defaultMessage:"No GitHub connection. Please reconnect your GitHub account in Codex Settings."}),{id:e,duration:10,hasCloseButton:!0});return;case"non_terminal_turn":a.danger(t.formatMessage({id:"wham.whamComposer.nonTerminalTurn",defaultMessage:"Task already has a running turn"}),{id:e,duration:10,hasCloseButton:!0});return;case"repo_not_initialized":a.danger(t.formatMessage({id:"wham.whamComposer.repoNotInitialized",defaultMessage:"GitHub Repository must be initialized to be used within Codex"}),{id:e,duration:10,hasCloseButton:!0});return;case"branch_creation_not_allowed":a.danger(t.formatMessage({id:"wham.whamComposer.branchCreationNotAllowed",defaultMessage:"Branch creation unauthorized for this repository. Please check your GitHub permissions."}));return;case"pull_request_not_allowed":a.danger(t.formatMessage({id:"wham.whamComposer.pullRequestNotAllowed",defaultMessage:"Repository does not allow pull requests from Codex. Please check your GitHub permissions."}));return;case"verified_commits_required":a.danger(t.formatMessage({id:"wham.whamComposer.verifiedCommitsRequired",defaultMessage:"Codex does not currently support PRs in repositories that require verified commits"}));return;case"binary_files_not_supported":a.danger(t.formatMessage({id:"wham.whamComposer.binaryFilesNotSupported",defaultMessage:"Binary files are not supported"}),{id:e,duration:10,hasCloseButton:!0});return;case"commit_pattern_required":a.danger(t.formatMessage({id:"wham.whamComposer.commitPatternRequired",defaultMessage:"Commit message must match a given regex pattern"}),{id:e,duration:10,hasCloseButton:!0});return;case"pull_request_updated_outside_of_codex":a.danger(t.formatMessage({id:"wham.whamComposer.pullRequestUpdatedOutsideOfCodex",defaultMessage:"Codex does not currently support updating PRs that are updated outside of Codex. For now, please create a new PR."}),{id:e,duration:10,hasCloseButton:!0});return;case"branch_no_longer_exists":a.danger(t.formatMessage({id:"wham.whamComposer.branchNoLongerExists",defaultMessage:"Existing PR branch appears to no longer exist. Please create a new PR."}),{id:e,duration:10,hasCloseButton:!0});return;case"pull_request_not_found_on_task":a.danger(t.formatMessage({id:"wham.whamComposer.pullRequestNotFoundOnTask",defaultMessage:"Pull request not found for task"}),{id:e,duration:10,hasCloseButton:!0});return;default:return null}}class z extends P{type;payload;constructor(e,t,a){super(e.message,t,a),this.type=e.type,this.payload=e}}function Z(s){const e=s.detail;if(e&&typeof e.type=="string"&&typeof e.message=="string"){const t={type:e.type,message:e.message};throw new z(t,s.status,{})}throw s}class u{static async _wrapWhamRequest(e){try{return await e()}catch(t){throw t instanceof P&&Z(t),t}}static getTasks(e=10,t=null,a="current"){return this._wrapWhamRequest(()=>i.safeGet("/wham/tasks",{parameters:{query:{limit:e,cursor:t,task_filter:a}}}))}static getTasksForList(e=10,t=null,a="current"){return this._wrapWhamRequest(()=>i.safeGet("/wham/tasks/list",{parameters:{query:{limit:e,cursor:t,task_filter:a}}}))}static getTaskDetails(e){return this._wrapWhamRequest(()=>i.safeGet("/wham/tasks/{task_id}",{parameters:{path:{task_id:e}}}))}static getTaskTurnPR(e,t){return this._wrapWhamRequest(()=>i.safeGet("/wham/tasks/{task_id}/turns/{turn_id}/pr",{parameters:{path:{task_id:e,turn_id:t}}}))}static getUserHandle(){return this._wrapWhamRequest(()=>i.safeGet("/wham/task_suggestions/github/user_handle",{}))}static getTaskTurn(e,t){return this._wrapWhamRequest(()=>i.safeGet("/wham/tasks/{task_id}/turns/{turn_id}",{parameters:{path:{task_id:e,turn_id:t}}}))}static getGithubInstallations(){return this._wrapWhamRequest(()=>i.safeGet("/wham/github/installations",{}))}static feedback({thumbRating:e,text:t,taskId:a,turnId:r,shareUrl:n,pullRequestUrl:o,category:m}){return this._wrapWhamRequest(()=>i.safePost("/wham/feedback",{requestBody:{thumb_rating:e,text:t,conversation_id:null,message_id:null,task_id:a,turn_id:r,share_url:n,pull_request_url:o,category:m}}))}static archiveTask(e){return this._wrapWhamRequest(()=>i.safePost("/wham/tasks/{task_id}/archive",{parameters:{path:{task_id:e}}}))}static recoverTask(e){return this._wrapWhamRequest(()=>i.safePost("/wham/tasks/{task_id}/recover",{parameters:{path:{task_id:e}}}))}static updatePr(e,t,a){return this._wrapWhamRequest(()=>i.safePatch("/wham/tasks/{task_id}/turns/{task_turn_id}/pr/{pr_id}",{parameters:{path:{task_id:e,task_turn_id:t,pr_id:a}}}))}static createPr(e,t,a,r){return this._wrapWhamRequest(()=>i.safePost("/wham/tasks/{task_id}/turns/{task_turn_id}/pr",{parameters:{path:{task_id:e,task_turn_id:t}},requestBody:{mode:a,add_codex_tag:r}}))}static getRepositoriesByInstallationId(e,t,a){return this._wrapWhamRequest(()=>i.safeGet("/wham/github/repositories/v2/{installation_id}",{parameters:{path:{installation_id:e},query:{page:t,per_page:a}}}))}static getRepository(e){return this._wrapWhamRequest(()=>i.safeGet("/wham/github/repositories/{repo_id}",{parameters:{path:{repo_id:e}}}))}static searchBranchesByRepository(e,t,a=10,r=null){return this._wrapWhamRequest(()=>i.safeGet("/wham/github/branches/{repo_id}/search",{parameters:{path:{repo_id:e},query:{query:t,page_size:a,cursor:r}}}))}static getEnvironment(e){return this._wrapWhamRequest(()=>i.safeGet("/wham/environments/{environment_id}",{parameters:{path:{environment_id:e}}}))}static getEnvironmentWithCreatorAndMachine(e){return this._wrapWhamRequest(()=>i.safeGet("/wham/environments/{environment_id}/with-creator-and-machine",{parameters:{path:{environment_id:e}}}))}static getEnvironmentWithCreators(e=10,t=null,a=!1){return this._wrapWhamRequest(()=>i.safeGet("/wham/environments/with-creators",{parameters:{query:{limit:e,cursor:t,enforce_repo_access:a}}}))}static updateEnvironment(e,t){return this._wrapWhamRequest(()=>i.safePatch("/wham/environments/{environment_id}",{parameters:{path:{environment_id:e}},requestBody:t}))}static deleteEnvironment(e){return this._wrapWhamRequest(()=>i.safeDelete("/wham/environments/{environment_id}",{parameters:{path:{environment_id:e}}}))}static getEnvironments(){return this._wrapWhamRequest(()=>i.safeGet("/wham/environments",{}))}static getMachines(){return this._wrapWhamRequest(()=>i.safeGet("/wham/machines",{}))}static createEnvironment(e){const t=e.envVars.reduce((r,n)=>(r[n.key]=n.value,r),{}),a=e.secrets.reduce((r,n)=>(r[n.key]=n.value,r),{});return this._wrapWhamRequest(()=>i.safePost("/wham/environments",{requestBody:{label:e.label,machine_id:e.machine,repos:[e.repositoryId],description:e.description,setup:e.setupCommands,workspace_dir:e.workspaceDirectory,agent_network_access:e.agentNetworkAccess,share_settings:e.share_settings,env_vars:t,secrets:a}}))}static runEnvironmentTestCommand(e){return this._wrapWhamRequest(()=>i.safePost("/wham/environments/test/{test_session_id}/command",{parameters:{path:{test_session_id:e.testSessionId}},requestBody:{command:e.command}}))}static getUserPreferences(){return this._wrapWhamRequest(()=>i.safeGet("/wham/settings/user",{}))}static getUserPreferencesConfig(){return this._wrapWhamRequest(()=>i.safeGet("/wham/settings/configs/user-preferences",{}))}static updateUserPreferences(e){return this._wrapWhamRequest(()=>i.safePatch("/wham/settings/user",{requestBody:{branch_format:e.branchFormat,git_diff_mode:e.diffView,custom_instructions:e.customInstructions}}))}static getTurns(e){return this._wrapWhamRequest(()=>i.safeGet("/wham/tasks/{task_id}/turns",{parameters:{path:{task_id:e}}}))}static getTurnLogs(e,t){return this._wrapWhamRequest(()=>i.safeGet("/wham/tasks/{task_id}/turns/{turn_id}/logs",{parameters:{path:{task_id:e,turn_id:t}}}))}static async createNewTask(e,t,a,r=!1){const n=await q("codex_create_task_turn").catch(m=>{R.addError(m)}),o=b(null,null,null,n);return this._wrapWhamRequest(()=>i.safePost("/wham/tasks",{requestBody:{new_task:{environment_id:e,branch:t,run_environment_in_qa_mode:r},input_items:[{type:"message",role:"user",content:[{content_type:"text",text:a}]}]},additionalHeaders:o}))}static async createNewTaskWithEditedPrompt(e,t,a,r,n=!1){const o=await u.createNewTask(t,a,r,n);return u.archiveTask(e).catch(()=>{}),o}static async createFollowUpTask(e,t,a,r,n=!1){const o=[{type:"message",role:"user",content:[{content_type:"text",text:a}]}];r.forEach(g=>{o.push({type:"comment",position:g.position,content:g.content})});const m=await q("codex_create_task_turn").catch(g=>{R.addError(g)}),k=b(null,null,null,m);return this._wrapWhamRequest(()=>i.safePost("/wham/tasks",{requestBody:{follow_up:{task_id:e,turn_id:t,run_environment_in_qa_mode:n},input_items:o},additionalHeaders:k}))}static markTurnAsRead(e){return this._wrapWhamRequest(()=>i.safePost("/wham/tasks/{task_id}/mark_read",{parameters:{path:{task_id:e}}}))}static forkSharedTask(e){return this._wrapWhamRequest(()=>i.safePost("/wham/tasks/{task_id}/fork",{parameters:{path:{task_id:e}}}))}static getRateLimit(){return i.safeGet("/wham/tasks/rate_limit")}}const ie=(s,e,t,a)=>({queryKey:["wham","task",s,e],staleTime:0,enabled:!!s&&!!e,queryFn:async()=>(t.invalidateQueries({queryKey:["wham","tasks"]}),await u.getTaskTurn(s??"",e??"").then(r=>(t.setQueryData(["wham","tasks"],n=>X(n,r)),r))),...a||{}}),J=s=>({queryKey:["wham","task",s],staleTime:0,enabled:!!s,queryFn:async()=>await u.getTaskDetails(s??"")}),oe=s=>{const e=J(s);return c(e)},V=19;function ue({enabled:s=!0,refetchOnMount:e=!1,refetchOnWindowFocus:t=!1}={}){const a=_(({tasksFilter:r})=>r);return W({queryKey:["wham","tasks",a],queryFn:async({pageParam:r})=>await u.getTasksForList(V,r??null,a),staleTime:15,initialPageParam:null,getNextPageParam:({cursor:r})=>r,enabled:s,refetchOnMount:e,refetchOnWindowFocus:t})}function me(){return c({queryKey:["wham","tasks","has-any"],queryFn:async()=>((await u.getTasksForList(1,null,"all")).items?.length??0)>0})}const M=s=>{const e=E(s.turn.output_items);return{id:s.task.id,title:s.task.title,has_generated_title:s.task.has_generated_title??null,updated_at:s.turn.created_at,task_status_display:{environment_label:s.turn.environment?.label,latest_turn_status_display:{turn_id:s.turn.id,turn_status:s.turn.turn_status,diff_stats:{files_modified:p(e,t=>t.files_modified??0),lines_added:p(e,t=>t.lines_added??0),lines_removed:p(e,t=>t.lines_removed??0)}}},archived:s.task.archived,has_unread_turn:!!s.task.has_unread_turn}};function X(s,e){const t=e.task.id;return e.task.current_turn_id!==e.turn.id?s:s?w(s,a=>{let r=!1;for(const n of a.pages){const o=n.items.findIndex(m=>m.id===t);if(o!==-1){n.items[o]=M(e),r=!0;break}}r||a.pages[0].items.push(M(e))}):{pageParams:[null],pages:[{items:[{task:e.task,turn:e.turn}]}]}}function ce({retry:s=0}={}){return c({queryKey:["wham","environments"],queryFn:()=>u.getEnvironments(),retry:s})}function de({pageSize:s=20,retry:e=0,enforceRepoAccess:t=!1}={}){return W({queryKey:["wham","environments","with-creators"],initialPageParam:null,queryFn:({pageParam:a})=>u.getEnvironmentWithCreators(s,a,t),getNextPageParam:a=>a.cursor??null,retry:e})}function he(){return c({queryKey:["wham","githubInstallations"],queryFn:()=>u.getGithubInstallations(),staleTime:0,refetchOnWindowFocus:!0,refetchOnMount:!0})}function le(s,e,t){s.setQueryData(["wham","environments"],a=>a?[e,...a]:[e]),s.setQueryData(["wham","environments","with-creators"],a=>{if(!a)return a;const r={...e,creator:t};return w(a,n=>{n.pages.length>0&&n.pages[0].items.unshift(r)})})}function pe(s,e){s.setQueryData(["wham","environments"],t=>t?.filter(a=>a.id!==e)),s.setQueryData(["wham","environments","with-creators"],t=>t&&w(t,a=>{a.pages.forEach(r=>{r.items=r.items.filter(n=>n.id!==e)})}))}function fe(s,e,t){s.setQueryData(["wham","environments"],a=>a?.map(r=>r.id===e?t:r)),s.setQueryData(["wham","environments","with-creators"],a=>a&&w(a,r=>{r.pages.forEach(n=>{n.items=n.items.map(o=>o.id===e?{...o,...t}:o)})})),s.setQueryData(["environments",e,"withCreatorAndMachine"],a=>a?{...a,...t}:void 0)}function _e(s){return c({queryKey:["environments",s,"withCreatorAndMachine"],queryFn:()=>u.getEnvironmentWithCreatorAndMachine(s)})}function ge(){return c({queryKey:["wham","userPreferences"],queryFn:()=>u.getUserPreferences()})}function we(){return c({queryKey:["wham","userPreferencesConfig"],queryFn:()=>u.getUserPreferencesConfig()})}function ke(s,e){return Promise.all([s.invalidateQueries({queryKey:["wham","environments","with-creators"]}),s.invalidateQueries({queryKey:["wham","environments"]}),e&&s.invalidateQueries({queryKey:["environments",e]}),e&&s.invalidateQueries({queryKey:["environments",e,"withCreatorAndMachine"]})])}function ye(s){return s.invalidateQueries({queryKey:["wham","userPreferences"]})}function ve(s){const e=_(t=>t.addTurnToTaskMap);return c({queryKey:["wham","task",s,"turns"],queryFn:async()=>{const t=await u.getTurns(s??"");return Object.values(t.turn_mapping).forEach(a=>{e(s??"",a.turn)}),t},enabled:!!s})}function Ce(s,e){return c({queryKey:["wham","task",s,"turns",e,"logs"],queryFn:()=>u.getTurnLogs(s??"",e??""),enabled:!!s&&!!e})}function Y({refetchOnWindowFocus:s=!1,refetchInterval:e}={}){return c({queryKey:["wham","rateLimit"],queryFn:()=>u.getRateLimit(),staleTime:0,refetchOnWindowFocus:s,refetchInterval:e})}function Te(){const s=_(n=>n.getRateLimit()),e=_(n=>n.setRateLimit),t=_(n=>!!n._forcedRateLimit),a=s&&s.remaining<=5,{data:r}=Y({refetchInterval:a?6e4:void 0,refetchOnWindowFocus:!0});return f.useEffect(()=>{r&&e(r)},[r,e]),!s||!a?null:d.jsx($,{remaining:s.remaining,resetsAfterText:s.resets_after_text,hasForcedRateLimit:t})}function $({remaining:s,resetsAfterText:e,hasForcedRateLimit:t=!1}){const a=B(),r=I(),[n,o]=f.useState(!1);return d.jsx(S,{open:r?n:void 0,onOpenChange:o,label:a.formatMessage({id:"BKAKLB",defaultMessage:"More available {resetsAfterText}"},{resetsAfterText:e}),children:d.jsxs("div",{className:v("inline-flex items-center gap-1.5 rounded-full px-3 py-2 text-sm font-medium",s===0?"bg-token-text-status-error/15 text-token-text-status-error":"bg-token-text-status-warning/15 text-token-text-status-warning"),onClick:r?()=>o(m=>!m):void 0,children:[d.jsx(N,{className:"icon-md"}),r?s:d.jsx(D,{id:"e7gj6g",defaultMessage:"{remaining, plural, =0 {No tasks left} one {One task left} other {# tasks left}}",values:{remaining:s}}),!1]})})}function ee(s,e){const t=a=>{e.current?.contains(a.target)||a.target instanceof HTMLButtonElement&&a.target.dataset.reasoningPopoverAction||s(a)};return document.addEventListener("click",t),()=>{document.removeEventListener("click",t)}}const qe=({children:s,sideOffset:e=-35,isOpen:t,closePopover:a,popoverContentRef:r,...n})=>{const o=K();return f.useEffect(()=>{if(t)return ee(a,r)},[t,r,a]),f.useEffect(()=>{if(!t)return;const m=k=>{k.key==="Escape"&&a()};return document.addEventListener("keydown",m,{capture:!0,passive:!0}),()=>document.removeEventListener("keydown",m,{capture:!0})},[t,a]),d.jsx(Q,{forceMount:!0,asChild:!0,align:"center",sideOffset:e,onOpenAutoFocus:m=>{m.preventDefault()},...n,children:d.jsx("div",{ref:r,className:v(!t&&"pointer-events-none","z-20"),children:d.jsx(F,{mode:"sync",children:t&&d.jsx(G.div,{className:v("border-token-border-light origin-radix-popover dark:bg-token-main-surface-secondary flex overflow-clip rounded-2xl border bg-white shadow-2xl dark:border-white/5 dark:shadow-[0px_24px_64px_rgba(0,0,0,0.32)]"),variants:{open:{scale:[.7,1],opacity:1,transition:o?C:T},closed:{opacity:0,scale:.8,transition:o?C:{...T,duration:.2}}},initial:"closed",animate:"open",exit:"closed",children:s})})})})},Re=s=>f.createElement("svg",{width:24,height:24,viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg",...s},f.createElement("path",{d:"M17.5 3C19.1569 3 20.5 4.34315 20.5 6C20.5 7.30574 19.6645 8.413 18.5 8.8252V9C18.5 11.2091 16.7091 13 14.5 13H9.5C8.39543 13 7.5 13.8954 7.5 15V15.1738C8.66468 15.5859 9.5 16.6941 9.5 18C9.5 19.6569 8.15685 21 6.5 21C4.84315 21 3.5 19.6569 3.5 18C3.5 16.6941 4.33532 15.5859 5.5 15.1738V8.8252C4.33548 8.413 3.5 7.30574 3.5 6C3.5 4.34315 4.84315 3 6.5 3C8.15685 3 9.5 4.34315 9.5 6C9.5 7.30574 8.66452 8.413 7.5 8.8252V11.5361C8.08845 11.1956 8.77125 11 9.5 11H14.5C15.6046 11 16.5 10.1046 16.5 9V8.8252C15.3355 8.413 14.5 7.30574 14.5 6C14.5 4.34315 15.8431 3 17.5 3ZM6.5 17C5.94772 17 5.5 17.4477 5.5 18C5.5 18.5523 5.94772 19 6.5 19C7.05228 19 7.5 18.5523 7.5 18C7.5 17.4477 7.05228 17 6.5 17ZM6.5 5C5.94772 5 5.5 5.44772 5.5 6C5.5 6.55228 5.94772 7 6.5 7C7.05228 7 7.5 6.55228 7.5 6C7.5 5.44772 7.05228 5 6.5 5ZM17.5 5C16.9477 5 16.5 5.44772 16.5 6C16.5 6.55228 16.9477 7 17.5 7C18.0523 7 18.5 6.55228 18.5 6C18.5 5.44772 18.0523 5 17.5 5Z",fill:"currentColor"}));export{qe as C,Re as S,u as W,fe as a,z as b,_ as c,ue as d,oe as e,ve as f,ie as g,he as h,ke as i,ce as j,de as k,me as l,ge as m,we as n,ye as o,le as p,Te as q,pe as r,p as s,re as t,_e as u,E as v,ne as w,Ce as x};
//# sourceMappingURL=t7vnx1cc2uzzkq81.js.map
