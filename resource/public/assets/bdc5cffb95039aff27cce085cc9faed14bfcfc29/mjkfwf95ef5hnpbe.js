import{lU as c,l as p,dE as l,fD as m,bt as u,nO as f}from"./dmck639k4dv7claj.js";import{K as h,N as _,r as g}from"./cs7toih8jegb7teq.js";import{e as R,f as T}from"./hnw079jsdm76umup.js";import"./lxgn8k46ba24438b.js";import"./lwh0wbmpf7uh5gaw.js";import"./cm813h9bptrniota.js";import"./dfhgw8mxn1h3ecpw.js";import"./k4ghje9xipg90eb2.js";import"./lox5zdwgg3gy3k4z.js";import"./nfubiloo9rdxk3kj.js";import"./itn5frgf3bcgdkwm.js";import"./kizn5m1hr7kdjf9n.js";import"./nlxagrvvx9r77jf7.js";import"./gqxnaj28dwt74usv.js";const I=()=>[{title:"ChatGPT"}],L=()=>!1;function b(e){const o={},a="client-created-root";o[a]={id:a,message:{id:a,author:{role:u.Root},content:{content_type:m.Text,parts:[]}},parent:"",children:[]};let n=a;const r=[],s=new Set;for(const t of e.messages)s.add(t.id);for(const t of e.messages){let i=t.metadata?.parent_id??n;s.has(i)||(i=n),o[t.id]={id:t.id,message:t,parent:i,children:[]},n=t.id,r.push(...t.metadata?.safe_urls??[])}for(const[t,i]of Object.entries(o))i.parent!==""&&o[i.parent]?.children?.push(t);const d=e.conversation_id??e.id;return{title:e.title??null,conversation_id:d,mapping:o,current_node:n,moderation_results:[],safe_urls:e.safe_urls??r,...f(e,"conversation_template_id","gizmo_id","is_archived","conversation_origin","async_status","update_time","is_do_not_remember")}}const U=c(function(){const o=h(),a=_(),n=o??a;p.debug(`IN: POST=${o?.length}, GET=${a?.length}`);const r=JSON.parse(n),s=r.conversation_id??r.id;return g.useEffect(()=>{const d=b(r);R(s,d),T(s),l(s,t=>{t.continuingFromSharedConversationId=s})},[]),p.debug(`Ready ${s} (SERVER: false) : ${n.length} byte(s)`),null});export{U as default,I as meta,L as shouldRevalidate};
//# sourceMappingURL=mjkfwf95ef5hnpbe.js.map
