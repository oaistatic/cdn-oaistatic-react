import{gV as o,lU as P,e as w,nL as y,bV as M,nM as k,k_ as U,R as f,gU as i,cK as L,cM as H,cv as x,bd as u,kZ as D,bc as F,nN as C,P as O,$ as G}from"./dmck639k4dv7claj.js";import{e as v,a as j,r as T,j as E,ac as A}from"./cs7toih8jegb7teq.js";import{g as $}from"./f7yovpq7wholb0k7.js";import{C as q}from"./mcuu3cegz8rmschr.js";const B={OAUTH_SCOPES_MISMATCH:o.OAUTH_FAILED_SCOPE_MISMATCH,EMAIL_DOMAIN_CLAIMED_BY_ANOTHER_WORKSPACE:o.OAUTH_FAILED_EMAIL_DOMAIN_ENFORCEMENT},Y=P(function(){const _=v(),m=w(),s=j(),l=U("installations/select_target"),h=y(),R=M(),p=T.useRef(!1),{mutateAsync:S}=k();return T.useEffect(()=>{if(p.current===!0)return;p.current=!0;async function b(){const g=$()==="popup"||h,I=window.location.href;try{const t=await f.safePost("/aip/connectors/links/oauth/callback",{requestBody:{full_redirect_url:I}});if(!t?.post_auth_url){s(i(o.OAUTH_FAILED_GENERIC));return}const e=new URL(t.post_auth_url,location.origin),r=t?.link?.connector_id===L[H.GITHUB_CONNECTOR],c=e.searchParams.get("github_onboarding")==="sync-repos";if(r&&c){const n=await f.safePost("/aip/connectors/github/search_repos",{requestBody:{query:"",limit:20,next_token:null,link_id:t.link.id}});if(!n||n.repos.length===0){window.open(`${l}?state=${encodeURIComponent(JSON.stringify({client_redirect_to:`${window.location.origin}/?github_onboarding=sync-repos`}))}`,"_self");return}}const d=x(e.hash)===u.Connectors;if(!d){const n=D[t.link.connector_id];n&&e.searchParams.set("add_source",n)}let a;if(d){const n=new URLSearchParams;n.set("connector",t.link.connector_id),r&&!c&&n.set("github_onboarding","configure-repos");const N={...e,search:"",hash:F(u.Connectors).hash+`?${n.toString()}`};a=A(N)}else r&&!c&&e.searchParams.set("github_onboarding","configure-repos"),a=A({pathname:e.pathname,search:e.search,hash:e.hash});if(g){C({success:!0,connectorId:t.link.connector_id,linkId:t.link.id}),window.close();return}O.logEventWithStatsig("Connector OAuth Connect","chatgpt_connectors_oauth_connect_success",{success:!0,type:t.link.connector_id}),s(i(o.CUSTOM_MSG,a,_.formatMessage({id:"Og/gZO",defaultMessage:"{connector} is now connected"},{connector:t.link.name})))}catch(t){const e=t instanceof G?B[t.detail?.error_code]??o.OAUTH_FAILED_GENERIC:o.OAUTH_FAILED_GENERIC;if(g){C({success:!1,connectorId:"",errorType:e}),window.close();return}O.logEventWithStatsig("Connector OAuth Connect","chatgpt_connectors_oauth_connect_error",{errorType:e,success:!1,type:"unknown"}),s(i(e,`#settings/${u.Connectors}`))}}b()},[m,h,l,_,s,R,S]),E.jsx("div",{className:"flex h-screen w-screen items-center justify-center",children:E.jsx(q,{size:36})})});export{Y as default};
//# sourceMappingURL=b22fxqp944jd9hyt.js.map
