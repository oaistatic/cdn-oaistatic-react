import{fS as B,aj as K,at as D,m as w,g as L,dK as T,d5 as x,fT as z,fU as E,fV as R,ag as F,aX as O,aa as G,cf as I,bc as P,o as U,fN as V,fW as Z}from"./nqrmgk5te3uzwsyz.js";import{K as e,x as a,y as N,z as H,A as W,E as _,G as j,U as f,H as q,J as h,M as J}from"./uox23aig6gp6se2y.js";import{c as Q}from"./nm5ivxaismwgb6gf.js";import{a as X,r as $,g as Y}from"./n3epq09dut36rmi2.js";const ee=/```.*?\n([\s\S]+?)\n?```[^`]*$/gms;function A(){return V()||Z()}const oe={[e.Comma]:",",[e.Enter]:"⏎",[e.Escape]:"Esc",[e.ArrowUp]:"↑",[e.ArrowDown]:"↓",[e.ArrowLeft]:"←",[e.ArrowRight]:"→",[e.Backspace]:"⌫",[e.Delete]:"⌦",[e.Tab]:"⇥",[e.Control]:"Ctrl",[e.Shift]:"Shift"};function te(o){switch(o){case e.Mod:return A()?"⌘":"Ctrl";case e.Meta:return A()?"⌘":"Win";default:return oe[o]}}const ge=o=>o.map(t=>te(t)??t),n=Y({newChat:{id:"keyboardActions.newChat",defaultMessage:"Open new chat"},focusPromptTextarea:{id:"keyboardActions.focusPromptTextarea",defaultMessage:"Focus chat input"},copyLastCodeBlock:{id:"keyboardActions.copyLastCodeBlock",defaultMessage:"Copy last code block"},copyLastResponse:{id:"keyboardActions.copyLastResponse",defaultMessage:"Copy last response"},toggleCustomInstructions:{id:"keyboardActions.toggleCustomInstructions",defaultMessage:"Set custom instructions"},navigationToggle:{id:"keyboardActions.navigationToggle",defaultMessage:"Toggle sidebar"},deleteChat:{id:"keyboardActions.deleteChat",defaultMessage:"Delete chat"},zoomIn:{id:"keyboardActions.zoomIn",defaultMessage:"Zoom in"},zoomOut:{id:"keyboardActions.zoomOut",defaultMessage:"Zoom out"},resetZoom:{id:"keyboardActions.resetZoom",defaultMessage:"Reset zoom"},cycleReasoningLevel:{id:"keyboardActions.cycleReasoningLevel",defaultMessage:"Cycle reasoning level"},toggleKeyboardActions:{id:"keyboardActions.toggleKeyboardActions",defaultMessage:"Show shortcuts"}}),le=new B,se=({ctx:o,resetThreadAction:t,clientThreadId:s,focusPromptTextareaAction:i,toaster:r,isFannyPackEnabled:g,isZoomEnabled:c,isElectronClient:l,queryClient:u})=>{const p=l?[[e.Mod,"n"]]:[];return[{key:"newChat",action:t||x,actionMessageDescriptor:n.newChat,group:a.Core,keyboardBinding:[e.Mod,e.Shift,"o"],altKeyboardBindings:g?[...p]:[...p,[e.Mod,"k"]]},{key:"focusPromptTextarea",action:i??j,actionMessageDescriptor:n.focusPromptTextarea,group:a.Chat,keyboardBinding:[e.Shift,e.Escape]},{key:"copyLastCodeBlock",action:d=>{if(s!=null){const C=F.getConversationTurns(O(s));for(let b=C.length-1;b>=0;b--){const{messages:v}=C[b],M=[...v.reduce((k,y)=>y.clientMetadata?.err==null&&y.author.role===G.Assistant&&y.recipient==="all"?k+(k?`

`:"")+I(y):k,"").matchAll(ee)],m=M.length?M[M.length-1][1]:null;if(m!=null){q(m,r,d).then(()=>{r.success("Copied code block to clipboard")});break}}}},actionMessageDescriptor:n.copyLastCodeBlock,group:a.Chat,keyboardBinding:[e.Mod,e.Shift,";"],altKeyboardBindings:[[e.Mod,e.Shift,":"]]},{key:"copyLastResponse",action:d=>{s!=null&&Q(o,s,r,d,"keyboard",u).then(()=>{r.success("Last response copied to clipboard")})},actionMessageDescriptor:n.copyLastResponse,group:a.Chat,keyboardBinding:[e.Mod,e.Shift,"c"]},{key:"toggleCustomInstructions",action:()=>f.toggleModal(h.UserContext),actionMessageDescriptor:n.toggleCustomInstructions,group:a.Settings,keyboardBinding:[e.Mod,e.Shift,"i"]},{key:"navigationToggle",action:()=>{f.setSidebarOpen(void 0)},actionMessageDescriptor:n.navigationToggle,group:a.Core,keyboardBinding:[e.Mod,e.Shift,"s"]},{key:"deleteChat",action:()=>{if(s){const d=P(s);d&&U(o,J,{serverThreadId:d,isActiveConversation:!0})}},actionMessageDescriptor:n.deleteChat,group:a.Chat,keyboardBinding:[e.Mod,e.Shift,e.Backspace],altKeyboardBindings:[[e.Mod,e.Shift,e.Delete]]},{key:"zoomIn",enabled:c,action:()=>z(),actionMessageDescriptor:n.zoomIn,group:a.Chat,keyboardBinding:[e.Mod,"+"],altKeyboardBindings:[[e.Mod,"="]]},{key:"zoomOut",enabled:c,action:()=>E(),actionMessageDescriptor:n.zoomOut,group:a.Chat,keyboardBinding:[e.Mod,"-"]},{key:"resetZoom",enabled:c,action:()=>R(),actionMessageDescriptor:n.resetZoom,group:a.Chat,keyboardBinding:[e.Mod,"0"]},{key:"toggleKeyboardActions",action:()=>f.toggleModal(h.KeyboardActions),actionMessageDescriptor:n.toggleKeyboardActions,group:a.Settings,keyboardBinding:[e.Mod,"/"]}]},S=o=>N(o,t=>{K.logEvent("Keyboard Shortcut",{keyboardActionKey:t.key}),D.addAction("chatgpt_keyboard_shortcut",{keyboardActionKey:t.key})},{enabled:!0}),ae=({resetThreadAction:o,clientThreadId:t,focusPromptTextareaAction:s}={})=>{const i=w(),{isFannyPackEnabled:r}=W(),g=_(),c=T,l=L(),u=X();return $.useMemo(()=>se({ctx:l,resetThreadAction:o,clientThreadId:t,focusPromptTextareaAction:s,toaster:i,isElectronClient:g,isFannyPackEnabled:r,isZoomEnabled:c,queryClient:u}).filter(({enabled:d=!0})=>d),[l,o,t,s,i,g,r,c,u])},ue=({resetThreadAction:o,clientThreadId:t,focusPromptTextareaAction:s})=>{const i=ae({resetThreadAction:o,clientThreadId:t,focusPromptTextareaAction:s}),g=H(c=>c.isVoiceActive)?[]:i;S(g)},ye=({setSelectedVoiceIndex:o,prevVoiceIndex:t,nextVoiceIndex:s})=>{const i=[{key:"selectPrevVoice",action:()=>{o(t)},actionMessageDescriptor:{defaultMessage:"Select previous voice"},group:a.Chat,keyboardBinding:[e.ArrowLeft]},{key:"selectNextVoice",action:()=>{o(s)},actionMessageDescriptor:{defaultMessage:"Select next voice"},group:a.Chat,keyboardBinding:[e.ArrowRight]}];S(i)};export{le as G,ue as a,ye as b,ge as g,A as i,ae as u};
//# sourceMappingURL=hk3emygtpn0flzgl.js.map
