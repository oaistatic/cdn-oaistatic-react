import{eq as c,eH as p,cs as m,aa as l}from"./nqrmgk5te3uzwsyz.js";import{B as u,C as f}from"./n3epq09dut36rmi2.js";import{i as _,j as h,p as g}from"./uox23aig6gp6se2y.js";import"./ex4mh6ngabphh37h.js";import"./gbfmb6n7vmtt0mld.js";import"./m142gq95svb5klgv.js";import"./he8nwqvd8i1qrsxh.js";import"./e4sjbad9hyqt73xe.js";import"./dkr8jkx9n88ez7ho.js";import"./nnldvg4yjd3ynnqu.js";import"./jsnptf63edu6k32a.js";import"./iwi9e9tak1je4ys9.js";import"./izzltcwrbklvvt51.js";import"./dnyjnsewv99rujtf.js";import"./hi5bz78ars1jrvhf.js";import"./nm5ivxaismwgb6gf.js";const L=()=>[{title:"ChatGPT"}],N=()=>!1;function R(e){const o={},s="client-created-root";o[s]={id:s,message:{id:s,author:{role:l.Root},content:{content_type:m.Text,parts:[]}},parent:"",children:[]};let a=s;const n=[],r=new Set;for(const t of e.messages)r.add(t.id);for(const t of e.messages){let i=t.metadata?.parent_id??a;r.has(i)||(i=a),o[t.id]={id:t.id,message:t,parent:i,children:[]},a=t.id,n.push(...t.metadata?.safe_urls??[])}for(const[t,i]of Object.entries(o))i.parent!==""&&o[i.parent]?.children?.push(t);const d=e.conversation_id??e.id;return{title:e.title??null,conversation_id:d,mapping:o,current_node:a,moderation_results:[],safe_urls:e.safe_urls??n,...g(e,"conversation_template_id","gizmo_id","is_archived","conversation_origin","async_status","update_time","is_do_not_remember")}}const k=c(function(){const o=u(),s=f(),a=o??s;p.debug(`IN: POST=${o?.length}, GET=${s?.length}`);const n=JSON.parse(a),r=n.conversation_id??n.id,d=R(n);return _(r,d),h(r),p.debug(`Ready ${r} (SERVER: false) : ${a.length} byte(s)`),null});export{k as default,L as meta,N as shouldRevalidate};
//# sourceMappingURL=errmyrc3tloblp0m.js.map
