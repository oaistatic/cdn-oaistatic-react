import{u as p,g as f}from"./end22x2k44oozsp9.js";import{fw as h,c_ as d,ey as m,an as g}from"./eb6xg52mym6rhnsh.js";import{r as n}from"./cs2gapsc2bulabhw.js";function v(e){const o=n.useRef(void 0);n.useEffect(()=>{if(!(h()&&d||!navigator.permissions))return navigator.permissions.query({name:"microphone"}).then(s=>{o.current=s,s.onchange=()=>{e(s.state==="granted")}}).catch(()=>{}),()=>{o.current&&(o.current.onchange=null)}},[e])}const w=()=>{const[e,o]=n.useState(!1),[i,s]=n.useState(!1),[c,a]=n.useState(),u=n.useCallback(r=>{o(r)},[]);v(u);const t=p(),l=n.useCallback(async()=>i?e:t().then(r=>(o(r),r)).finally(()=>{s(!0)}),[t,i,e]);return n.useEffect(()=>{e&&D().then(r=>{a(r)})},[e]),{requestMicrophonePermissions:l,userDeclinedMicrophonePermissions:i&&!e,microphoneAvailable:e,microphoneLabel:c}},D=async()=>{try{return(await f("audioinput"))?.label??""}catch(e){const o=m();return g.addError("Failed to fetch default media device",{error:e,protocol:o}),"Error accessing microphone devices"}};export{w as u};
//# sourceMappingURL=hpjvjuwibdlkiy7e.js.map
