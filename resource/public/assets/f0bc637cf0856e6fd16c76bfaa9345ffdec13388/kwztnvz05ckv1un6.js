import{dl as o,m7 as w,e as y,o2 as N,b2 as k,o3 as M,lh as U,R as f,dk as i,bT as H,bV as L,o4 as x,al as u,kB as D,ak as F,o5 as C,P as O,ei as G}from"./lgw4q0e8zlqqfgug.js";import{f as j,a as v,r as T,j as E,ad as A}from"./m60bpb0x3x7rg8fj.js";import{g as B}from"./je5fxp5a852v8yln.js";import{C as q}from"./crheuewn890nts1d.js";const $={OAUTH_SCOPES_MISMATCH:o.OAUTH_FAILED_SCOPE_MISMATCH,EMAIL_DOMAIN_CLAIMED_BY_ANOTHER_WORKSPACE:o.OAUTH_FAILED_EMAIL_DOMAIN_ENFORCEMENT},Z=w(function(){const l=j(),m=y(),s=v(),_=U("installations/select_target"),h=N(),R=k(),p=T.useRef(!1),{mutateAsync:S}=M();return T.useEffect(()=>{if(p.current===!0)return;p.current=!0;async function b(){const g=B()==="popup"||h,I=window.location.href;try{const t=await f.safePost("/aip/connectors/links/oauth/callback",{requestBody:{full_redirect_url:I}});if(!t?.post_auth_url){s(i(o.OAUTH_FAILED_GENERIC));return}const e=new URL(t.post_auth_url,location.origin),r=t?.link?.connector_id===H[L.GITHUB_CONNECTOR],c=e.searchParams.get("github_onboarding")==="sync-repos";if(r&&c){const n=await f.safePost("/aip/connectors/github/search_repos",{requestBody:{query:"",limit:20,next_token:null,link_id:t.link.id}});if(!n||n.repos.length===0){window.open(`${_}?state=${encodeURIComponent(JSON.stringify({client_redirect_to:`${window.location.origin}/?github_onboarding=sync-repos`}))}`,"_self");return}}const d=x(e.hash)===u.Connectors;if(!d){const n=D[t.link.connector_id];n&&e.searchParams.set("add_source",n)}let a;if(d){const n=new URLSearchParams;n.set("connector",t.link.connector_id),r&&!c&&n.set("github_onboarding","configure-repos");const P={...e,search:"",hash:F(u.Connectors).hash+`?${n.toString()}`};a=A(P)}else r&&!c&&e.searchParams.set("github_onboarding","configure-repos"),a=A({pathname:e.pathname,search:e.search,hash:e.hash});if(g){C({success:!0,connectorId:t.link.connector_id,linkId:t.link.id}),window.close();return}O.logEventWithStatsig("Connector OAuth Connect","chatgpt_connectors_oauth_connect_success",{success:!0,type:t.link.connector_id}),s(i(o.CUSTOM_MSG,a,l.formatMessage({id:"Og/gZO",defaultMessage:"{connector} is now connected"},{connector:t.link.name})))}catch(t){const e=t instanceof G?$[t.detail?.error_code]??o.OAUTH_FAILED_GENERIC:o.OAUTH_FAILED_GENERIC;if(g){C({success:!1,connectorId:"",errorType:e}),window.close();return}O.logEventWithStatsig("Connector OAuth Connect","chatgpt_connectors_oauth_connect_error",{errorType:e,success:!1,type:"unknown"}),s(i(e,`#settings/${u.Connectors}`))}}b()},[m,h,_,l,s,R,S]),E.jsx("div",{className:"flex h-screen w-screen items-center justify-center",children:E.jsx(q,{size:36})})});export{Z as default};
//# sourceMappingURL=kwztnvz05ckv1un6.js.map
