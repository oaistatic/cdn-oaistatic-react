import{m7 as p,l as c,d0 as m,fc as l,aC as u,o6 as f}from"./lgw4q0e8zlqqfgug.js";import{N as h,O as _,r as g}from"./m60bpb0x3x7rg8fj.js";import{e as R,f as T}from"./ggjzadbnd3k1vu0k.js";import"./jobqnbdildqzowzf.js";import"./mlqzrqe1i57m6im6.js";import"./kfjcy5y4cxuymbdf.js";import"./h81zqbvh0a7amk0o.js";import"./ls4akj6tri7bc2dz.js";import"./glu06a3y5u0laqff.js";import"./dgb06x9f8z6d0ar9.js";import"./iayy5u2a26jybmdr.js";import"./l9bupap4fyh5egbo.js";import"./d4l47j95cc16bbv9.js";import"./mlo67gs1ylzshmge.js";const I=()=>[{title:"ChatGPT"}],L=()=>!1;function C(e){const o={},a="client-created-root";o[a]={id:a,message:{id:a,author:{role:u.Root},content:{content_type:l.Text,parts:[]}},parent:"",children:[]};let n=a;const r=[],s=new Set;for(const t of e.messages)s.add(t.id);for(const t of e.messages){let i=t.metadata?.parent_id??n;s.has(i)||(i=n),o[t.id]={id:t.id,message:t,parent:i,children:[]},n=t.id,r.push(...t.metadata?.safe_urls??[])}for(const[t,i]of Object.entries(o))i.parent!==""&&o[i.parent]?.children?.push(t);const d=e.conversation_id??e.id;return{title:e.title??null,conversation_id:d,mapping:o,current_node:n,moderation_results:[],safe_urls:e.safe_urls??r,...f(e,"conversation_template_id","gizmo_id","is_archived","conversation_origin","async_status","update_time","is_do_not_remember")}}const j=p(function(){const o=h(),a=_(),n=o??a;c.debug(`IN: POST=${o?.length}, GET=${a?.length}`);const r=JSON.parse(n),s=r.conversation_id??r.id;return g.useEffect(()=>{const d=C(r);R(s,d),T(s),m(s,t=>{t.continuingFromSharedConversationId=s})},[]),c.debug(`Ready ${s} (SERVER: false) : ${n.length} byte(s)`),null});export{j as default,I as meta,L as shouldRevalidate};
//# sourceMappingURL=dm1p210d34faz5su.js.map
