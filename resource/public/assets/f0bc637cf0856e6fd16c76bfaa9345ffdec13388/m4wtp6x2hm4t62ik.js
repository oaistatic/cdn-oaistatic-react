import{R as y,b2 as Q,pE as F,pF as p,pG as q,pH as h}from"./lgw4q0e8zlqqfgug.js";import{h as m,i as d,f as R,u as K,x as M}from"./m60bpb0x3x7rg8fj.js";const D=({workspaceId:e,currentRoles:s,bootstrapResources:a})=>{const r=m(),i=Q(),t=R(),{mutateAsync:n}=d({mutationFn:u=>y.safePost("/rbac/workspace/{workspace_id}/roles",{parameters:{query:{account_id:e},path:{workspace_id:e}},requestBody:{role_name:u.name,description:u.description,bootstrap_resources:a}}),onMutate:({name:u,description:c})=>{r.cancelQueries({queryKey:[e,"roles"]});const o=s;return r.setQueryData([e,"roles"],l=>(l||(l={data:[],object:"list",has_more:!1}),{...l,data:[{id:"new",name:u,permissions:[],resource_type:"workspace",predefined_role:!1,description:c,created_at:Date.now(),updated_at:Date.now(),created_by:"system",metadata:{}},...l.data]})),{previousRoles:o}},onError:(u,c,o)=>{r.setQueryData([e,"roles"],o?.previousRoles),r.invalidateQueries({refetchType:"all",queryKey:[e,"roles"]}),u.message==="Role with this name already exists."&&i.warning(t.formatMessage({id:"Hn9Qxu",defaultMessage:"Role with this name already exists"}),{duration:1})},onSuccess:()=>{r.invalidateQueries({refetchType:"all",queryKey:[e,"roles"]})}});return{createRole:n}},P=({workspaceId:e})=>{const s=m(),{mutateAsync:a}=d({mutationFn:async r=>await y.safeDelete("/rbac/workspace/{workspace_id}/roles/{role_id}",{parameters:{query:{account_id:e},path:{workspace_id:e,role_id:r}}}),onSettled:()=>{s.invalidateQueries({refetchType:"all",queryKey:[e,"roles"]})}});return{deleteRole:a}},A=({workspaceId:e})=>{const s=m(),a=Q(),r=R(),{mutateAsync:i}=d({mutationFn:async t=>(t.permissions.includes(F.SearchAccess)||(t.permissions=t.permissions.filter(n=>n!==F.AgentModeAccess&&n!==F.DeepResearchAccess)),await y.safePatch("/rbac/workspace/{workspace_id}/roles/{role_id}",{parameters:{query:{account_id:e},path:{workspace_id:e,role_id:t.id}},requestBody:{role_name:t.name,description:t.description,permissions:t.permissions}})),onMutate:({id:t,name:n,permissions:u})=>{const c=s.getQueryData([e,"role",t]);return s.setQueryData([e,"role",t],o=>({...o,name:n,permissions:u})),{previousRoles:c}},onError:(t,n,u)=>{s.setQueryData([e,"role",n.id],u?.previousRoles),t.message==="Role with this name already exists."?a.warning(r.formatMessage({id:"EDzkz/",defaultMessage:"Role with this name already exists"}),{duration:1}):a.danger(r.formatMessage({id:"ezIZZO",defaultMessage:"Failed to update permission"}),{duration:1})},onSuccess:()=>{s.invalidateQueries({refetchType:"all",queryKey:[e,"roles"]}),a.success(r.formatMessage({id:"L59KWu",defaultMessage:"Successfully updated permission"}),{duration:1})}});return{updateRole:i}},T=({workspaceId:e,roleId:s})=>{const a=m(),{mutateAsync:r}=d({mutationFn:async({id:i})=>await y.safePost("/rbac/workspace/{workspace_id}/role-assignments",{parameters:{query:{account_id:e},path:{workspace_id:e}},requestBody:{role_id:s,principal_id:i,principal_type:"group"}}),onSuccess:(i,t)=>{const n=[e,s,"role-groups"];a.setQueryData(n,u=>[...u,{id:t.id,name:t.name??"",num_members:t.num_members??0,created_time:new Date().toDateString()}]),a.invalidateQueries({refetchType:"all",queryKey:n})}});return{assignGroup:r}},w=({workspaceId:e,roleId:s})=>{const a=m(),{mutateAsync:r}=d({mutationFn:async i=>await y.safeDelete("/rbac/workspace/{workspace_id}/role-assignments",{parameters:{query:{account_id:e,role_id:s,principal_id:i,principal_type:"group"},path:{workspace_id:e}}}),onSuccess:(i,t)=>{const n=[e,s,"role-groups"];a.setQueryData(n,u=>u?u.filter(c=>c.id!==t):[]),a.invalidateQueries({refetchType:"all",queryKey:n})}});return{unassignGroup:r}},G=({workspaceId:e,roleId:s,showToast:a=!0})=>{const r=m(),i=Q(),t=R(),{mutateAsync:n,isPending:u,variables:c}=d({mutationFn:async o=>await y.safePatch("/rbac/workspace/{workspace_id}/roles/{role_id}/connectors/{connector_id}",{parameters:{query:{account_id:e},path:{workspace_id:e,role_id:s,connector_id:o.connectorId}},requestBody:{permissions:o.permissions}}),onMutate:({connectorId:o,permissions:l})=>{r.cancelQueries({queryKey:p(e,s)}),r.cancelQueries({queryKey:q(e,o)}),r.cancelQueries({queryKey:h(e,o,s)});const _=r.getQueryData(p(e,s));return r.setQueryData(p(e,s),g=>({...g,connectors_with_permissions:g?.connectors_with_permissions.map(f=>f.connector.id===o?{...f,permissions:l}:f)})),{previousConnectors:_}},onError:(o,l,_)=>{r.setQueryData(p(e,s),_?.previousConnectors),a&&i.danger(t.formatMessage({id:"ezIZZO",defaultMessage:"Failed to update permission"}),{duration:1})},onSuccess:(o,l)=>{r.invalidateQueries({refetchType:"all",queryKey:p(e,s)}),r.invalidateQueries({refetchType:"all",queryKey:q(e,l.connectorId)}),r.invalidateQueries({refetchType:"all",queryKey:h(e,l.connectorId,s)}),a&&i.success(t.formatMessage({id:"L59KWu",defaultMessage:"Successfully updated permission"}),{duration:1})}});return{updateRoleConnectorPermission:n,isPending:u,variables:c}},S=({workspaceId:e,connectorId:s,showToast:a=!0})=>{const r=m(),i=Q(),t=R(),{mutateAsync:n,isPending:u,variables:c}=d({mutationFn:async o=>await y.safePatch("/rbac/workspace/{workspace_id}/roles/{role_id}/connectors/{connector_id}",{parameters:{query:{account_id:e},path:{workspace_id:e,role_id:o.roleId,connector_id:s}},requestBody:{permissions:o.permissions}}),onMutate:({roleId:o,permissions:l})=>{r.cancelQueries({queryKey:q(e,s)}),r.cancelQueries({queryKey:p(e,o)}),r.cancelQueries({queryKey:h(e,s,o)});const _=r.getQueryData(q(e,s));return r.setQueryData(q(e,s),g=>({...g,roles_with_permissions:g?.roles_with_permissions?.map(f=>f.role.id===o?{...f,connector_permissions:l}:f)})),{previousRoles:_}},onError:(o,l,_)=>{r.setQueryData(q(e,s),_?.previousRoles),a&&i.danger(t.formatMessage({id:"ezIZZO",defaultMessage:"Failed to update permission"}),{duration:1})},onSuccess:(o,l)=>{r.invalidateQueries({refetchType:"all",queryKey:q(e,s)}),r.invalidateQueries({refetchType:"all",queryKey:p(e,l.roleId)}),r.invalidateQueries({refetchType:"all",queryKey:h(e,s,l.roleId)}),a&&i.success(t.formatMessage({id:"L59KWu",defaultMessage:"Successfully updated permission"}),{duration:1})}});return{updateConnectorRolePermission:n,isPending:u,variables:c}},E=({workspaceId:e,showToast:s=!0})=>{const a=Q(),r=R(),i=m(),{mutateAsync:t,isPending:n,variables:u}=d({mutationFn:async c=>await y.safePatch("/rbac/workspace/{workspace_id}/roles/{role_id}/connectors",{parameters:{query:{account_id:e},path:{workspace_id:e,role_id:c.id}},requestBody:{state:c.state}}),onError:()=>{s&&a.danger(r.formatMessage({id:"ezIZZO",defaultMessage:"Failed to update permission"}),{duration:1})},onSuccess:(c,o)=>{i.invalidateQueries({refetchType:"all",queryKey:p(e,o.id)}),i.invalidateQueries({refetchType:"all",queryKey:["permissions",e]}),s&&a.success(r.formatMessage({id:"L59KWu",defaultMessage:"Successfully updated permission"}),{duration:1})}});return{toggleAllConnectorsPermissionForRole:t,isPending:n,variables:u}},L=({workspaceId:e,roleId:s})=>K({queryKey:[e,"role",s],enabled:!!s,queryFn:async()=>(await y.safeGet("/rbac/workspace/{workspace_id}/roles/{role_id}",{parameters:{query:{account_id:e,consistency:"strong"},path:{workspace_id:e,role_id:s}}})).role,staleTime:1e3*60*5}),Z=({workspaceId:e,enabled:s=!0})=>K({queryKey:[e,"roles"],queryFn:()=>y.safeGet("/rbac/workspace/{workspace_id}/roles",{parameters:{query:{account_id:e,consistency:"strong"},path:{workspace_id:e}}}),enabled:s}),x=({workspaceId:e,roleId:s})=>K({queryKey:[e,s,"role-groups"],queryFn:async()=>(await y.safeGet("/rbac/workspace/{workspace_id}/roles/{role_id}/principals",{parameters:{query:{account_id:e,consistency:"strong"},path:{workspace_id:e,role_id:s}}})).groups}),z=({accountId:e,workspaceId:s,roleId:a,enabled:r=!0})=>{const{data:i,isLoading:t,isFetching:n,error:u,refetch:c}=K({queryKey:p(s,a),queryFn:()=>y.safeGet("/rbac/workspace/{workspace_id}/roles/{role_id}/connectors",{parameters:{query:{account_id:e,consistency:"strong"},path:{workspace_id:s,role_id:a}}}),enabled:r});return{connectorsWithPermission:new Map(i?.connectors_with_permissions?.map(l=>[l.connector.id,l])),isLoading:t,isFetching:n,error:u,refetch:c}},B=({workspaceId:e,connectorId:s,enabled:a=!0})=>K({queryKey:["roles",e,s],queryFn:()=>y.safeGet("/rbac/workspace/{workspace_id}/connector/{connector_id}/roles",{parameters:{query:{account_id:e,consistency:"strong"},path:{workspace_id:e,connector_id:s}}}),enabled:a}),b=({workspaceId:e,roleId:s,connectorId:a})=>y.safeGet("/rbac/workspace/{workspace_id}/roles/{role_id}/connectors/{connector_id}",{parameters:{query:{account_id:e,consistency:"strong"},path:{workspace_id:e,role_id:s,connector_id:a}}}),W=({workspaceId:e,roleId:s,connectorIds:a,enabled:r=!0})=>M({queries:a.map(i=>({queryKey:h(e,i,s),queryFn:async()=>{try{return await b({workspaceId:e,connectorId:i,roleId:s})}catch(t){if((t?.status??t?.response?.status??t?.code)===404)return{permissions:[]};throw t}},enabled:r})),combine:i=>{const t={};return i.forEach((n,u)=>{const c=a[u];n.data?t[c]=n.data.permissions:t[c]=[]}),{results:t,isLoading:i.some(n=>n.isLoading),isFetching:i.some(n=>n.isFetching),isError:i.some(n=>n.isError&&n.error?.status!==404),errors:i.map(n=>n.error).filter(n=>n?.status!==404)}}});export{T as a,w as b,L as c,P as d,A as e,G as f,E as g,z as h,W as i,Z as j,D as k,B as l,S as m,x as u};
//# sourceMappingURL=m4wtp6x2hm4t62ik.js.map
