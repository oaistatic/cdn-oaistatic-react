import{E as b,d as _}from"./jo2rzlevh0fbjyvo.js";import{X as g,f as P,F as S,c as T,p as v,a as A,b as R,d as y}from"./ou0dbpaenmm0r7gk.js";import{ax as E}from"./lef5ym39glv4981l.js";function M(t,u=50,h=50){var r;const f={SheetNames:[],Sheets:{}};for(const o of t.sheets){f.SheetNames.push(o.name);const l={};for(const s of o.rows)if(!(s.index>u))for(const e of s.cells){const n=/^[A-Z]+/.exec(e.address);if(!n)continue;const m=n[0];let c=0;for(let a=0;a<m.length;a++)c=c*26+(m.charCodeAt(a)-64);if(c>h)continue;const d={};if(e.value!==""){const a=Number(e.value);d.v=Number.isNaN(a)?e.value:a}e.formula&&(d.f=e.formula),l[e.address]=d}f.Sheets[o.name]=l}g.import_functions(P);try{g(f,{continue_after_error:!0})}catch(o){E.addError(o)}for(const o of t.sheets){const l=f.Sheets[o.name];for(const s of o.rows)if(!(s.index>u)){for(const e of s.cells)if(e.formula&&e.value===""){const n=(r=l[e.address])==null?void 0:r.v;e.value=n!=null?String(n):"This formula is not supported in web preview. Please download to open in your preferred software for the best results."}}}}function C(t=0){return t>0?t:self.devicePixelRatio||1}async function W(t,u,h=404,f=0){const r=C(f),o=t.widthEmu*b,l=t.heightEmu*b,s=Math.min(1,h/Math.max(o,l)),e=Math.round(o*s*r),n=Math.round(l*s*r),m=new OffscreenCanvas(e,n),c=m.getContext("2d");if(!c)throw new Error("Failed to create 2D context");c.scale(r*s,r*s),await _(t,u,c,[]);const d=await m.convertToBlob({type:"image/png"});return new Promise(a=>{const w=new FileReader;w.onload=()=>a(w.result),w.readAsDataURL(d)})}async function H(t,u=20,h=10,f=0,r){const o=C(f),l=80,s=20;M(r,50,50);const e=new OffscreenCanvas(h*l*o,u*s*o),n=e.getContext("2d");if(!n)return Promise.resolve("");n.scale(o,o);const c=Array(50).fill(S);for(const i of t.columns){const x=T(i.width);for(let p=i.min-1;p<i.max;p++)c[p]=x}const a=Array(50).fill(v(t.defaultRowHeight||A));for(const i of t.rows)i.customHeight&&(a[i.index-1]=v(i.height));const w=R(r);y(n,t,c,a,0,0,800,400,null,null,1,w,{},new Set,new Set,!1);const L=await e.convertToBlob({type:"image/png"});return new Promise(i=>{const x=new FileReader;x.onload=()=>i(x.result),x.readAsDataURL(L)})}export{H as a,W as s};
//# sourceMappingURL=d9yelnvmrbnletz1.js.map
