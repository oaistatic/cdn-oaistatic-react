var D=Object.defineProperty,T=Object.defineProperties;var A=Object.getOwnPropertyDescriptors;var v=Object.getOwnPropertySymbols;var G=Object.prototype.hasOwnProperty,w=Object.prototype.propertyIsEnumerable;var C=(e,s,r)=>s in e?D(e,s,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[s]=r,q=(e,s)=>{for(var r in s||(s={}))G.call(s,r)&&C(e,r,s[r]);if(v)for(var r of v(s))w.call(s,r)&&C(e,r,s[r]);return e},h=(e,s)=>T(e,A(s));import{R as y,f as b,pk as R,pl as d,pm as g,pn as M}from"./lef5ym39glv4981l.js";import{u as _,a as f,b as F,f as K,z as S}from"./jj85rqzpbnvv3emr.js";const B=({workspaceId:e,currentRoles:s,bootstrapResources:r})=>{const t=_(),i=b(),n=F(),{mutateAsync:a}=f({mutationFn:o=>y.safePost("/rbac/workspace/{workspace_id}/roles",{parameters:{query:{account_id:e},path:{workspace_id:e}},requestBody:{role_name:o.name,description:o.description,bootstrap_resources:r}}),onMutate:({name:o,description:u})=>{t.cancelQueries({queryKey:[e,"roles"]});const c=s;return t.setQueryData([e,"roles"],l=>(l||(l={data:[],object:"list",has_more:!1}),h(q({},l),{data:[{id:"new",name:o,permissions:[],resource_type:"workspace",predefined_role:!1,description:u,created_at:Date.now(),updated_at:Date.now(),created_by:"system",metadata:{}},...l.data]}))),{previousRoles:c}},onError:(o,u,c)=>{t.setQueryData([e,"roles"],c==null?void 0:c.previousRoles),t.invalidateQueries({refetchType:"all",queryKey:[e,"roles"]}),o.message==="Role with this name already exists."&&i.warning(n.formatMessage({id:"Hn9Qxu",defaultMessage:"Role with this name already exists"}),{duration:1})},onSuccess:()=>{t.invalidateQueries({refetchType:"all",queryKey:[e,"roles"]})}});return{createRole:a}},W=({workspaceId:e})=>{const s=_(),{mutateAsync:r}=f({mutationFn:async t=>await y.safeDelete("/rbac/workspace/{workspace_id}/roles/{role_id}",{parameters:{query:{account_id:e},path:{workspace_id:e,role_id:t}}}),onSettled:()=>{s.invalidateQueries({refetchType:"all",queryKey:[e,"roles"]})}});return{deleteRole:r}},U=({workspaceId:e})=>{const s=_(),r=b(),t=F(),{mutateAsync:i}=f({mutationFn:async n=>(n.permissions.includes(R.SearchAccess)||(n.permissions=n.permissions.filter(a=>a!==R.AgentModeAccess&&a!==R.DeepResearchAccess)),n.permissions.includes(R.GPT5ThinkingAccess)||n.permissions.includes(R.GPT5ThinkingMiniAccess)||n.permissions.push(R.GPT5ThinkingMiniAccess),await y.safePatch("/rbac/workspace/{workspace_id}/roles/{role_id}",{parameters:{query:{account_id:e},path:{workspace_id:e,role_id:n.id}},requestBody:{role_name:n.name,description:n.description,permissions:n.permissions}})),onMutate:({id:n,name:a,permissions:o})=>{const u=s.getQueryData([e,"role",n]);return s.setQueryData([e,"role",n],c=>h(q({},c),{name:a,permissions:o})),{previousRoles:u}},onError:(n,a,o)=>{s.setQueryData([e,"role",a.id],o==null?void 0:o.previousRoles),n.message==="Role with this name already exists."?r.warning(t.formatMessage({id:"EDzkz/",defaultMessage:"Role with this name already exists"}),{duration:1}):r.danger(t.formatMessage({id:"ezIZZO",defaultMessage:"Failed to update permission"}),{duration:1})},onSuccess:()=>{s.invalidateQueries({refetchType:"all",queryKey:[e,"roles"]}),r.success(t.formatMessage({id:"L59KWu",defaultMessage:"Successfully updated permission"}),{duration:1})}});return{updateRole:i}},O=({workspaceId:e,roleId:s})=>{const r=_(),t=f({mutationFn:async i=>await y.safePut("/rbac/workspace/{workspace_id}/roles/{role_id}/metadata",{parameters:{query:{account_id:e},path:{workspace_id:e,role_id:s}},requestBody:i}),onSuccess:i=>{r.setQueryData([e,"role-metadata",s],i)},onSettled:()=>{r.invalidateQueries({queryKey:[e,"role-metadata",s]})}});return{upsertRoleMetadata:t.mutateAsync,isPending:t.isPending}},j=({workspaceId:e,roleId:s})=>{const r=_(),{mutateAsync:t}=f({mutationFn:async({id:i})=>await y.safePost("/rbac/workspace/{workspace_id}/role-assignments",{parameters:{query:{account_id:e},path:{workspace_id:e}},requestBody:{role_id:s,principal_id:i,principal_type:"group"}}),onSuccess:(i,n)=>{const a=[e,s,"role-groups"];r.setQueryData(a,o=>{var u,c;return[...o,{id:n.id,name:(u=n.name)!=null?u:"",num_members:(c=n.num_members)!=null?c:0,created_time:new Date().toDateString()}]}),r.invalidateQueries({refetchType:"all",queryKey:a})}});return{assignGroup:t}},H=({workspaceId:e,roleId:s})=>{const r=_(),{mutateAsync:t}=f({mutationFn:async i=>await y.safeDelete("/rbac/workspace/{workspace_id}/role-assignments",{parameters:{query:{account_id:e,role_id:s,principal_id:i,principal_type:"group"},path:{workspace_id:e}}}),onSuccess:(i,n)=>{const a=[e,s,"role-groups"];r.setQueryData(a,o=>o?o.filter(u=>u.id!==n):[]),r.invalidateQueries({refetchType:"all",queryKey:a})}});return{unassignGroup:t}},N=({workspaceId:e,roleId:s,showToast:r=!0})=>{const t=_(),i=b(),n=F(),{mutateAsync:a,isPending:o,variables:u}=f({mutationFn:async c=>await y.safePatch("/rbac/workspace/{workspace_id}/roles/{role_id}/connectors/{connector_id}",{parameters:{query:{account_id:e},path:{workspace_id:e,role_id:s,connector_id:c.connectorId}},requestBody:{permissions:c.permissions}}),onMutate:({connectorId:c,permissions:l})=>{t.cancelQueries({queryKey:d(e,s)}),t.cancelQueries({queryKey:g(e,c)}),t.cancelQueries({queryKey:M(e,c,s)});const p=t.getQueryData(d(e,s));return t.setQueryData(d(e,s),m=>h(q({},m),{connectors_with_permissions:m==null?void 0:m.connectors_with_permissions.map(Q=>Q.connector.id===c?h(q({},Q),{permissions:l}):Q)})),{previousConnectors:p}},onError:(c,l,p)=>{t.setQueryData(d(e,s),p==null?void 0:p.previousConnectors),r&&i.danger(n.formatMessage({id:"ezIZZO",defaultMessage:"Failed to update permission"}),{duration:1})},onSuccess:(c,l)=>{t.invalidateQueries({refetchType:"all",queryKey:d(e,s)}),t.invalidateQueries({refetchType:"all",queryKey:g(e,l.connectorId)}),t.invalidateQueries({refetchType:"all",queryKey:M(e,l.connectorId,s)}),r&&i.success(n.formatMessage({id:"L59KWu",defaultMessage:"Successfully updated permission"}),{duration:1})}});return{updateRoleConnectorPermission:a,isPending:o,variables:u}},J=({workspaceId:e,connectorId:s,showToast:r=!0})=>{const t=_(),i=b(),n=F(),{mutateAsync:a,isPending:o,variables:u}=f({mutationFn:async c=>await y.safePatch("/rbac/workspace/{workspace_id}/roles/{role_id}/connectors/{connector_id}",{parameters:{query:{account_id:e},path:{workspace_id:e,role_id:c.roleId,connector_id:s}},requestBody:{permissions:c.permissions}}),onMutate:({roleId:c,permissions:l})=>{t.cancelQueries({queryKey:g(e,s)}),t.cancelQueries({queryKey:d(e,c)}),t.cancelQueries({queryKey:M(e,s,c)});const p=t.getQueryData(g(e,s));return t.setQueryData(g(e,s),m=>{var Q;return h(q({},m),{roles_with_permissions:(Q=m==null?void 0:m.roles_with_permissions)==null?void 0:Q.map(P=>P.role.id===c?h(q({},P),{connector_permissions:l}):P)})}),{previousRoles:p}},onError:(c,l,p)=>{t.setQueryData(g(e,s),p==null?void 0:p.previousRoles),r&&i.danger(n.formatMessage({id:"ezIZZO",defaultMessage:"Failed to update permission"}),{duration:1})},onSuccess:(c,l)=>{t.invalidateQueries({refetchType:"all",queryKey:g(e,s)}),t.invalidateQueries({refetchType:"all",queryKey:d(e,l.roleId)}),t.invalidateQueries({refetchType:"all",queryKey:M(e,s,l.roleId)}),r&&i.success(n.formatMessage({id:"L59KWu",defaultMessage:"Successfully updated permission"}),{duration:1})}});return{updateConnectorRolePermission:a,isPending:o,variables:u}},V=({workspaceId:e,showToast:s=!0})=>{const r=b(),t=F(),i=_(),{mutateAsync:n,isPending:a,variables:o}=f({mutationFn:async u=>await y.safePatch("/rbac/workspace/{workspace_id}/roles/{role_id}/connectors",{parameters:{query:{account_id:e},path:{workspace_id:e,role_id:u.id}},requestBody:{state:u.state}}),onError:()=>{s&&r.danger(t.formatMessage({id:"ezIZZO",defaultMessage:"Failed to update permission"}),{duration:1})},onSuccess:(u,c)=>{i.invalidateQueries({refetchType:"all",queryKey:d(e,c.id)}),i.invalidateQueries({refetchType:"all",queryKey:["permissions",e]}),s&&r.success(t.formatMessage({id:"L59KWu",defaultMessage:"Successfully updated permission"}),{duration:1})}});return{toggleAllConnectorsPermissionForRole:n,isPending:a,variables:o}},X=({workspaceId:e,roleId:s})=>K({queryKey:[e,"role",s],enabled:!!s,queryFn:async()=>(await y.safeGet("/rbac/workspace/{workspace_id}/roles/{role_id}",{parameters:{query:{account_id:e,consistency:"strong"},path:{workspace_id:e,role_id:s}}})).role,staleTime:1e3*60*5}),Y=({workspaceId:e,enabled:s=!0})=>K({queryKey:[e,"roles"],queryFn:()=>y.safeGet("/rbac/workspace/{workspace_id}/roles",{parameters:{query:{account_id:e,consistency:"strong"},path:{workspace_id:e}}}),enabled:s}),$=({workspaceId:e,roleId:s})=>K({queryKey:[e,s,"role-groups"],queryFn:async()=>(await y.safeGet("/rbac/workspace/{workspace_id}/roles/{role_id}/principals",{parameters:{query:{account_id:e,consistency:"strong"},path:{workspace_id:e,role_id:s}}})).groups}),k=({accountId:e,workspaceId:s,roleId:r,enabled:t=!0})=>{var l;const{data:i,isLoading:n,isFetching:a,error:o,refetch:u}=K({queryKey:d(s,r),queryFn:()=>y.safeGet("/rbac/workspace/{workspace_id}/roles/{role_id}/connectors",{parameters:{query:{account_id:e,consistency:"strong"},path:{workspace_id:s,role_id:r}}}),enabled:t});return{connectorsWithPermission:new Map((l=i==null?void 0:i.connectors_with_permissions)==null?void 0:l.map(p=>[p.connector.id,p])),isLoading:n,isFetching:a,error:o,refetch:u}},x=({workspaceId:e,roleId:s,enabled:r=!0})=>K({queryKey:[e,"role-metadata",s],enabled:r&&!!s,queryFn:()=>y.safeGet("/rbac/workspace/{workspace_id}/roles/{role_id}/metadata",{parameters:{query:{account_id:e},path:{workspace_id:e,role_id:s}}})}),I=({workspaceId:e,connectorId:s,enabled:r=!0})=>K({queryKey:["roles",e,s],queryFn:()=>y.safeGet("/rbac/workspace/{workspace_id}/connector/{connector_id}/roles",{parameters:{query:{account_id:e,consistency:"strong"},path:{workspace_id:e,connector_id:s}}}),enabled:r}),L=({workspaceId:e,roleId:s,connectorId:r})=>y.safeGet("/rbac/workspace/{workspace_id}/roles/{role_id}/connectors/{connector_id}",{parameters:{query:{account_id:e,consistency:"strong"},path:{workspace_id:e,role_id:s,connector_id:r}}}),ee=({workspaceId:e,roleId:s,connectorIds:r,enabled:t=!0})=>S({queries:r.map(i=>({queryKey:M(e,i,s),queryFn:async()=>{var n,a,o;try{return await L({workspaceId:e,connectorId:i,roleId:s})}catch(u){if(((o=(a=u==null?void 0:u.status)!=null?a:(n=u==null?void 0:u.response)==null?void 0:n.status)!=null?o:u==null?void 0:u.code)===404)return{permissions:[]};throw u}},enabled:t})),combine:i=>{const n={};return i.forEach((a,o)=>{const u=r[o];a.data?n[u]=a.data.permissions:n[u]=[]}),{results:n,isLoading:i.some(a=>a.isLoading),isFetching:i.some(a=>a.isFetching),isError:i.some(a=>{var o;return a.isError&&((o=a.error)==null?void 0:o.status)!==404}),errors:i.map(a=>a.error).filter(a=>(a==null?void 0:a.status)!==404)}}});export{j as a,H as b,V as c,k as d,ee as e,X as f,W as g,U as h,N as i,x as j,O as k,Y as l,B as m,I as n,J as o,$ as u};
//# sourceMappingURL=jprx81py211obz0t.js.map
